#!/usr/bin/env python

# CAVEAT UTILITOR
#
# This file was automatically generated by TatSu.
#
#    https://pypi.python.org/pypi/tatsu/
#
# Any changes you make to it will be overwritten the next time
# the file is generated.

from __future__ import annotations

from tatsu.objectmodel import Node
from tatsu.semantics import ModelBuilderSemantics


class ModelBase(Node):
    pass


class SpiceModelBuilderSemantics(ModelBuilderSemantics):
    def __init__(self, context=None, types=None):
        types = [
            t for t in globals().values()
            if type(t) is type and issubclass(t, ModelBase)
        ] + (types or [])
        super(SpiceModelBuilderSemantics, self).__init__(context=context, types=types)


class Circuit(ModelBase):
    lines = None
    title = None


class Lines(ModelBase):
    pass


class CircuitLine(ModelBase):
    pass


class NetlistLines(ModelBase):
    pass


class NetlistLine(ModelBase):
    pass


class NonLinearDependentSource(ModelBase):
    dev = None
    expr = None
    magnitude = None
    negative = None
    parameters = None
    positive = None
    sep = None


class Capacitor(ModelBase):
    dev = None
    model = None
    negative = None
    parameters = None
    positive = None
    sep = None
    value = None


class Diode(ModelBase):
    area = None
    dev = None
    model = None
    negative = None
    parameters = None
    positive = None
    sep = None


class VoltageControlledVoltageSource(ModelBase):
    controller = None
    dev = None
    negative = None
    nodes = None
    positive = None
    sep = None
    transconductance = None


class CurrentControlledCurrentSource(ModelBase):
    controller = None
    dev = None
    device = None
    gain = None
    negative = None
    positive = None
    sep = None


class VoltageControlledCurrentSource(ModelBase):
    controller = None
    dev = None
    negative = None
    nodes = None
    positive = None
    sep = None
    transconductance = None


class CurrentControlledVoltageSource(ModelBase):
    controller = None
    dev = None
    device = None
    negative = None
    positive = None
    sep = None
    transresistance = None


class ControlValue(ModelBase):
    expression = None
    sep = None
    type = None


class ControlTable(ModelBase):
    expr = None
    input = None
    output = None
    sep = None
    type = None


class ControlVoltagePoly(ModelBase):
    coefficient = None
    negative = None
    positive = None
    sep = None
    value = None


class ControlCurrentPoly(ModelBase):
    coefficient = None
    device = None
    sep = None
    value = None


class CurrentSource(ModelBase):
    ac_magnitude = None
    ac_phase = None
    dc_value = None
    dev = None
    negative = None
    positive = None
    sep = None
    transient = None


class JFET(ModelBase):
    area = None
    dev = None
    drain = None
    gate = None
    model = None
    parameters = None
    sep = None
    source = None


class MutualInductor(ModelBase):
    dev = None
    inductor = None
    model = None
    sep = None
    value = None


class Inductor(ModelBase):
    dev = None
    model = None
    negative = None
    parameters = None
    positive = None
    sep = None
    value = None


class MOSFET(ModelBase):
    bulk = None
    dev = None
    drain = None
    gate = None
    model = None
    name = None
    param = None
    parameter = None
    sep = None
    source = None
    value = None


class BJT(ModelBase):
    area = None
    base = None
    collector = None
    dev = None
    emitter = None
    model = None
    parameters = None
    sep = None
    substrate = None
    thermal = None


class SubstrateNode(ModelBase):
    substrate = None


class Resistor(ModelBase):
    dev = None
    model = None
    negative = None
    parameters = None
    positive = None
    sep = None
    value = None


class Switch(ModelBase):
    control_n = None
    control_p = None
    dev = None
    initial_state = None
    model = None
    negative = None
    positive = None
    sep = None


class Subcircuit(ModelBase):
    dev = None
    node = None
    parameters = None
    params = None
    sep = None


class VoltageSource(ModelBase):
    ac_magnitude = None
    ac_phase = None
    dc_value = None
    dev = None
    negative = None
    positive = None
    sep = None
    transient = None


class TransientSpecification(ModelBase):
    pass


class TransientPulse(ModelBase):
    sep = None
    type = None


class PulseArguments(ModelBase):
    sep = None
    v1 = None
    value = None


class TransientSin(ModelBase):
    sep = None
    type = None


class SinArguments(ModelBase):
    freq = None
    sep = None
    v0 = None
    va = None
    value = None


class TransientExp(ModelBase):
    sep = None
    type = None


class ExpArguments(ModelBase):
    sep = None
    v1 = None
    v2 = None
    value = None


class TransientPat(ModelBase):
    sep = None
    type = None


class PatArguments(ModelBase):
    data = None
    repeat = None
    sep = None
    td = None
    tf = None
    tr = None
    tsample = None
    vhi = None
    vlo = None


class TransientPWL(ModelBase):
    type = None


class PWLFileArguments(ModelBase):
    filename = None
    parameters = None
    sep = None


class PWLArguments(ModelBase):
    parameters = None
    sep = None
    t = None
    value = None


class TransientSFFM(ModelBase):
    sep = None
    type = None


class SFFMArguments(ModelBase):
    sep = None
    v0 = None
    va = None
    value = None


class Command(ModelBase):
    pass


class NetlistCmds(ModelBase):
    pass


class ACCmd(ModelBase):
    cmd = None
    end = None
    points = None
    sep = None
    start = None
    sweep = None
    table = None


class DataCmd(ModelBase):
    cmd = None
    name = None
    sep = None
    table = None
    value = None


class DCCmd(ModelBase):
    cmd = None
    name = None
    point = None
    points = None
    sep = None
    start = None
    step = None
    stop = None
    sweep = None
    table = None


class EmbeddedSamplingCmd(ModelBase):
    cmd = None
    name = None
    parameter = None
    sep = None
    type = None
    value = None


class ICCmd(ModelBase):
    cmd = None
    node = None
    sep = None
    value = None


class IncludeCmd(ModelBase):
    cmd = None
    filename = None
    sep = None


class LibCmd(ModelBase):
    block = None
    call = None
    cmd = None
    sep = None


class LibCall(ModelBase):
    entry = None
    filename = None
    sep = None


class ModelCmd(ModelBase):
    cmd = None
    name = None
    parameters = None
    sep = None
    type = None


class ParamCmd(ModelBase):
    cmd = None
    parameters = None
    sep = None


class SimulatorCmd(ModelBase):
    cmd = None
    sep = None
    simulator = None


class SubcktCmd(ModelBase):
    cmd = None
    lines = None
    name = None
    node = None
    parameters = None
    sep = None


class LibBlock(ModelBase):
    entry = None
    lines = None
    sep = None


class TitleCmd(ModelBase):
    cmd = None
    title = None


class Parameters(ModelBase):
    pass


class Parameter(ModelBase):
    name = None
    sep = None
    value = None


class GenericExpression(ModelBase):
    braced = None
    value = None


class TableFile(ModelBase):
    filename = None
    func = None
    sep = None


class BracedExpression(ModelBase):
    sep = None


class ParenthesisNodes(ModelBase):
    sep = None


class CircuitNodes(ModelBase):
    sep = None


class Expression(ModelBase):
    term = None
    ternary = None


class Ternary(ModelBase):
    op = None
    sep = None
    t = None
    x = None
    y = None


class Conditional(ModelBase):
    expr = None


class Or(ModelBase):
    left = None
    op = None
    right = None
    sep = None


class Xor(ModelBase):
    left = None
    op = None
    right = None
    sep = None


class And(ModelBase):
    left = None
    op = None
    right = None
    sep = None


class Not(ModelBase):
    op = None
    operator = None


class Relational(ModelBase):
    factor = None
    left = None
    op = None
    right = None
    sep = None


class ConditionalFactor(ModelBase):
    boolean = None
    expr = None
    sep = None


class Term(ModelBase):
    pass


class AddSub(ModelBase):
    left = None
    op = None
    right = None
    sep = None


class ProdDivMod(ModelBase):
    left = None
    op = None
    right = None
    sep = None


class Sign(ModelBase):
    op = None
    operator = None


class Exponential(ModelBase):
    left = None
    op = None
    right = None
    sep = None


class Functional(ModelBase):
    pass


class Variable(ModelBase):
    factor = None
    sep = None
    variable = None


class Factor(ModelBase):
    sep = None


class Functions(ModelBase):
    pass


class Value(ModelBase):
    imag = None
    real = None
    unit = None


class ImagValue(ModelBase):
    value = None


class RealValue(ModelBase):
    value = None


class NumberScale(ModelBase):
    scale = None
    value = None


class Unit(ModelBase):
    pass


class Hz(ModelBase):
    pass


class Float(ModelBase):
    pass


class Int(ModelBase):
    pass


class Filename(ModelBase):
    pass


class ModelName(ModelBase):
    name = None
    sep = None


class BinaryPattern(ModelBase):
    pattern = None


class Device(ModelBase):
    pass


class NetNode(ModelBase):
    node = None
    sep = None


class Separator(ModelBase):
    comment = None


class Comment(ModelBase):
    pass
